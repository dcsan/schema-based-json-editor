/**
* @fileoverview This file is generated by the Angular template compiler.
* Do not edit.
* @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
* tslint:disable
*/ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./optional.component";
var styles_OptionalComponent = [];
var RenderType_OptionalComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_OptionalComponent, data: {} });
export { RenderType_OptionalComponent as RenderType_OptionalComponent };
function View_OptionalComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, "div", [], [[8, "className", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, "label", [], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, "input", [["type", "checkbox"]], [[8, "checked", 0], [8, "disabled", 0]], [[null, "change"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co.toggleOptional.emit() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), i0.ɵted(3, null, [" ", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.theme.optionalCheckbox; _ck(_v, 0, 0, currVal_0); var currVal_1 = (_co.value === undefined); var currVal_2 = _co.isReadOnly; _ck(_v, 2, 0, currVal_1, currVal_2); var currVal_3 = _co.locale.info.notExists; _ck(_v, 3, 0, currVal_3); }); }
export function View_OptionalComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_OptionalComponent_1)), i0.ɵdid(1, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.hasOptionalCheckbox; _ck(_v, 1, 0, currVal_0); }, null); }
export function View_OptionalComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "optional", [], null, null, null, View_OptionalComponent_0, RenderType_OptionalComponent)), i0.ɵdid(1, 49152, null, 0, i2.OptionalComponent, [], null, null)], null, null); }
var OptionalComponentNgFactory = i0.ɵccf("optional", i2.OptionalComponent, View_OptionalComponent_Host_0, { required: "required", value: "value", isReadOnly: "isReadOnly", theme: "theme", locale: "locale" }, { toggleOptional: "toggleOptional" }, []);
export { OptionalComponentNgFactory as OptionalComponentNgFactory };
